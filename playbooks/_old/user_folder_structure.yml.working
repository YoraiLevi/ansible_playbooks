- name: Symlinks to 2nd partition
  block:
    # - name: check if D partition exists.
    - name: create directory structure in d.
      ansible.windows.win_file:
        path: "D:/{{ item }}"
        state: directory
      loop:
        # linux file names
        - bin
        # - boot
        # - dev
        - etc
        # - home
        # - init
        # - lib
        # - lib32
        # - lib64
        # - libx32
        # - lost+found
        # - media
        # - mnt
        - opt
        # - proc
        # - root
        # - run
        # - sbin
        # - snap
        # - srv
        # - sys
        # - tmp
        - usr
        - var
        # D as root of user
        - "3D Objects"
        - Desktop
        - Documents
        - Downloads
        - Favorites
        - Games
        - GoogleDrive
        - Links
        - Music
        - Pictures
        - Videos
        - VirtualMachines
        - source
        - source/thirdparty
        - source/inDev
        - source/trashDev
    - name: create Symlinks
      win_command: "powershell.exe New-Item -Type SymbolicLink -Path {{item.path}} -Target {{item.target}}"
      # ignore_errors: yes
      register: ret
      failed_when:
        - '"Cannot find path" in ret.stderr'
      changed_when:
        - ret.rc == 0
        - ret.stdout is regex('Mode\s+LastWriteTime\s+Length Name')
      loop:
        # "3D Objects" "Desktop" "Documents" "Downloads" "Favorites" "Links" "Music" "Pictures" "Videos"
        - {
            path: "$ENV:USERPROFILE/3D Objects",
            target: "D:/3D Objects",
            LocalizedResourceName: "@%SystemRoot%\\system32\\windows.storage.dll,-21825",
            IconResource: "%SystemRoot%\\system32\\imageres.dll,-198",
          }
        - { path: "$ENV:USERPROFILE/Desktop", target: "D:/Desktop" }
        - { path: "$ENV:USERPROFILE/Documents", target: "D:/Documents" }
        - { path: "$ENV:USERPROFILE/Downloads", target: "D:/Downloads" }
        - { path: "$ENV:USERPROFILE/Favorites", target: "D:/Favorites" }
        - { path: "$ENV:USERPROFILE/Links", target: "D:/Links" }
        - { path: "$ENV:USERPROFILE/Music", target: "D:/Music" }
        - { path: "$ENV:USERPROFILE/Pictures", target: "D:/Pictures" }
        - { path: "$ENV:USERPROFILE/Videos", target: "D:/Videos" }
        # config
        - { path: "$ENV:USERPROFILE/.vscode", target: "D:/etc/.vscode" }
        - { path: "$ENV:USERPROFILE/.gitconfig", target: "D:/etc/.gitconfig" }
        - {
            path: "$ENV:USERPROFILE/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json",
            target: "D:/etc/windows-terminal/settings.json",
          }
        - {
            path: "$ENV:USERPROFILE/AppData/Local/Microsoft/Edge/User Data",
            target: "D:/etc/microsoft/edge/User Data",
          }
        # large data
        - {
            path: "C:/Users/Public/Documents/Hyper-V/Virtual Hard Disks",
            target: "D:/VirtualMachines/Hyper-V/Virtual Hard Disks",
          }
        - {
            path: "C:/ProgramData/Microsoft/Windows/Hyper-V",
            target: "D:/VirtualMachines/Hyper-V",
          }
# - name: Setup folder structure like linux
# - name: setup Startup services
